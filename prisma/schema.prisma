generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String  @id @default(uuid(4))
  name      String
  uin       String  @unique
  user_name String? @unique
  photo_url String  @default("d")
  email     String  @unique
  password  String

  role Role @default(user)

  isBlocked     Boolean  @default(false)
  blocked_users String[]

  sended_messages   Message[] @relation("SendedBy")
  received_messages Message[] @relation("ReceivedBy")

  sended_chats   Chat[] @relation("FirstUser")
  received_chats Chat[] @relation("SecondUser")

  @@map("user")
}

model Chat {
  id String @id @default(cuid(2))

  first_user    User   @relation("FirstUser", fields: [first_user_id], references: [id])
  first_user_id String

  second_user    User   @relation("SecondUser", fields: [second_user_id], references: [id])
  second_user_id String

  messages   Message[] @relation("MessagesToChat")
  created_at DateTime  @default(now())
}

model Message {
  id String @id @default(cuid(2))

  chat    Chat   @relation("MessagesToChat", fields: [chat_id], references: [id])
  chat_id String

  sended_by      User   @relation("SendedBy", fields: [sended_by_id], references: [id])
  sended_by_id   String
  received_by    User   @relation("ReceivedBy", fields: [received_by_id], references: [id])
  received_by_id String

  content    String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("message")
}

enum Role {
  dev
  admin
  helper
  user

  @@map("role")
}
