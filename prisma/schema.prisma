generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String  @id @default(uuid(4))
  name          String
  uin           String  @unique
  user_name     String? @unique
  photo_url     String  @default("d")
  email         String  @unique
  password      String
  refresh_token String  @default("")

  isOnline  Boolean @default(false)
  last_seen String  @default("")

  role Role @default(user)

  isBlocked     Boolean  @default(false)
  blocked_users String[]

  sended_messages   Message[] @relation("SendedBy")
  received_messages Message[] @relation("ReceivedBy")

  my_chats       Chat[] @relation("ChatUserOne")
  received_chats Chat[] @relation("ChatUserTwo")

  @@map("user")
}

model Chat {
  id String @id @default(cuid(2))

  chat_user_one    User   @relation("ChatUserOne", fields: [chat_user_one_id], references: [id])
  chat_user_one_id String

  chat_user_two    User   @relation("ChatUserTwo", fields: [chat_user_two_id], references: [id])
  chat_user_two_id String

  messages   Message[] @relation("MessagesToChat")
  created_at DateTime  @default(now())

  @@map("chat")
}

model Message {
  id String @id @default(cuid(2))

  chat    Chat   @relation("MessagesToChat", fields: [chat_id], references: [id])
  chat_id String

  sended_by      User   @relation("SendedBy", fields: [sended_by_id], references: [id])
  sended_by_id   String
  received_by    User   @relation("ReceivedBy", fields: [received_by_id], references: [id])
  received_by_id String

  content    String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("message")
}

enum Role {
  dev
  admin
  helper
  user

  @@map("role")
}
